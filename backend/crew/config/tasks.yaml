classify_query:
  description: >
    Based on the query input, classify it as either a 'research_topic' or an 'academic_question'.
  expected_output: >
    {
      "classification": "research_topic" | "academic_question"
    }
  async_execution: false
  agent: query_classifier

process_research_topic:
  description: >
    If classification is 'research_topic', use GoogleScholarScrapingTool to extract relevant papers for {query}.
    Each result should include: Title, Author(s), Year, Link, and Abstract. 
    If any field is missing, use "N/A". Do not fabricate information. 
    Format the output as a structured Markdown list suitable for chat.
  expected_output: >
    A Markdown-formatted list (max 5 items) with:
    - Title
    - Author(s)
    - Year
    - Link
    - Abstract
  async_execution: false
  agent: senior_data_researcher
  context:
    - classify_query

process_academic_question:
  description: >
    If classification is 'academic_question', provide a well-reasoned academic answer to {query} in a several paragraphs, including equations (use $...$ for inline math only, do not use [ ]), examples, and references when applicable.
  expected_output: >
    A detailed academic explanation using relevant reasoning, math, and examples. No need to include references.
    The output should be structured in several paragraphs, with clear and logical flow.
  async_execution: false
  agent: academic_helper
  context:
    - classify_query

report_results:
  description: >
    State the classification result from classify_query and return the output from either process_research_topic or process_academic_question.
    Based on the classification result from classify_query, return either:
    - The Markdown output process_research_topic from senior_data_researcher if classified as 'research_topic'.
    - The academic explanation process_academic_question from academic_helper if classified as 'academic_question'.
    Only one response should be returned. Do not rephrase, Do not restructure, Do not summarize the content.
  expected_output: >
    {
      "response": "[Research Topic] OR [Academic Answer]:\n [Only one: Markdown research list OR academic answer]"
    }
  async_execution: false
  agent: reporting_analyst
  context:
    - classify_query
    - process_research_topic
    - process_academic_question